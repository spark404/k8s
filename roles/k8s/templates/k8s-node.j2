#cloud-config

---
write_files:
- path: /etc/cloudstack.conf
  permissions: "0640"
  owner: root
  content: |
    [global]
    api-url={{ cs_api_url }}
    api-key={{ cs_api_key }}
    secret-key={{ cs_api_secret }}
    ssl-no-verify={{ cs_ssl_verify }}
    project-id={{ cs_project.id }}
- path: /srv/kubernetes/ca.crt
  owner: root
  content: |
    {{ lookup('file', 'certificates/ca.crt') | indent}}
- path: /srv/kubernetes/kubeconfig.yaml
  owner: root
  content: |
    apiVersion: v1
    kind: Config
    clusters:
    - name: local
      cluster:
        server: http://{{ k8s_master.default_ip }}:8080
    users:
    - name: kubelet
    contexts:
    - context:
        cluster: local
        user: kubelet
      name: kubelet-context
    current-context: kubelet-context
- path: "/opt/mount_vdb.sh"
  permissions: "0744"
  owner: root
  content: |
    PATH=$PATH:/bin/:/sbin
    if blkid /dev/vdb | grep ext4
      then 
        echo "Already formatted"
      else 
        /sbin/mkfs.ext4 /dev/vdb 
    fi
    
    mkdir /var/lib/docker
    mount /dev/vdb /var/lib/docker
- path: "/etc/systemd/system.conf.d/kubernetes-accounting.conf"
  owner: root
  permissions: "0644"
  content: |
    [Manager]
    DefaultCPUAccounting=yes
    DefaultMemoryAccounting=yes
- path: "/srv/kubernetes/kube-proxy.config"
  permissions: "0644"
  owner: root
  content: |
    apiVersion: componentconfig/v1alpha1
    bindAddress: 0.0.0.0
    clientConnection:
      acceptContentTypes: ""
      burst: 10
      contentType: application/vnd.kubernetes.protobuf
      kubeconfig: ""
      qps: 5
    clusterCIDR: "{{ k8s_cluster_network | ipsubnet(25,0) }}"
    configSyncPeriod: 15m0s
    conntrack:
      max: 0
      maxPerCore: 32768
      min: 131072
      tcpCloseWaitTimeout: 1h0m0s
      tcpEstablishedTimeout: 24h0m0s
    enableProfiling: false
    featureGates: "SupportIPVSProxyMode=false"
    healthzBindAddress: 0.0.0.0:10256
    hostnameOverride: ""
    iptables:
      masqueradeAll: false
      masqueradeBit: 14
      minSyncPeriod: 0s
      syncPeriod: 30s
    ipvs:
      minSyncPeriod: 0s
      scheduler: ""
      syncPeriod: 0s
    kind: KubeProxyConfiguration
    metricsBindAddress: 127.0.0.1:10249
    mode: iptables
    oomScoreAdj: -999
    portRange: ""
    resourceContainer: /kube-proxy
    udpTimeoutMilliseconds: 250ms
coreos:
  units:
    - name: update-engine.service
      mask: true
    - name: locksmithd.service
      mask: true
    - name: vdbmount.service
      command: start
      content: |
        [Unit]
        Description=Mount extra disk on /var/lib/docker

        [Service]
        ExecStart=/bin/bash -x /opt/mount_vdb.sh
        Type=oneshot    
    - name: etcd.service
      mask: true
    - name: fleet.service
      command: start
      content: |
        [Unit]
        Description=fleet daemon
        Wants=fleet.socket
        After=fleet.socket

        [Service]
        Environment="FLEET_ETCD_SERVERS=http://{{ k8s_master.default_ip}}:4001"
        Environment="FLEET_METADATA=role=node"
        ExecStart=/usr/bin/fleetd
        Restart=always
        RestartSec=10s
    - name: flannel.service
      command: start
      content: |
        [Unit]
        After=network-online.target 
        Wants=network-online.target
        Description=flannel is an etcd backed overlay network for containers

        [Service]
        Type=notify
        ExecStartPre=-/usr/bin/mkdir -p /opt/bin
        ExecStartPre=/usr/bin/wget -N -P /opt/bin https://github.com/coreos/flannel/releases/download/v0.9.0/flanneld-amd64
        ExecStartPre=/usr/bin/chmod +x /opt/bin/flanneld-amd64
        ExecStart=/opt/bin/flanneld-amd64 -etcd-endpoints http://{{ k8s_master.default_ip}}:4001 --ip-masq=true
    - name: docker.service
      command: start
      content: |
        [Unit]
        After=flannel.service
        Wants=flannel.service
        Description=Docker Application Container Engine
        Documentation=http://docs.docker.io

        [Service]
        EnvironmentFile=/run/flannel/subnet.env
        ExecStartPre=/bin/mount --make-rprivate /
        ExecStart=/usr/bin/dockerd --iptables=false --bip=${FLANNEL_SUBNET} --mtu=${FLANNEL_MTU} -s=overlay -H fd://

        [Install]
        WantedBy=multi-user.target
    - name: setup-network-environment.service
      command: start
      content: |
        [Unit]
        Description=Setup Network Environment
        Documentation=https://github.com/kelseyhightower/setup-network-environment
        Requires=network-online.target
        After=network-online.target

        [Service]
        ExecStartPre=-/usr/bin/mkdir -p /opt/bin
        ExecStartPre=/usr/bin/wget -N -P /opt/bin https://github.com/kelseyhightower/setup-network-environment/releases/download/1.0.1/setup-network-environment
        ExecStartPre=/usr/bin/chmod +x /opt/bin/setup-network-environment
        ExecStart=/opt/bin/setup-network-environment
        RemainAfterExit=yes
        Type=oneshot
    - name: kubernetes-installer.service
      command: start
      content: |
        [Unit]
        Description=Kubernetes Installer
        Documentation=https://github.com/GoogleCloudPlatform/kubernetes
        Requires=etcd2.service
        After=etcd2.service

        [Service]
        ExecStartPre=/usr/bin/wget -N -P /opt {{k8s_download_prefix}}/{{ k8s_version }}/kubernetes-server-linux-amd64.tar.gz
        ExecStart=/bin/true
        RemainAfterExit=yes
        Type=oneshot
    - name: kube-kubelet.service
      command: start
      content: |
        [Unit]
        Description=Kubernetes Kubelet
        Documentation=https://github.com/GoogleCloudPlatform/kubernetes
        Requires=setup-network-environment.service
        After=setup-network-environment.service

        [Service]
        EnvironmentFile=/etc/network-environment
        ExecStartPre=/bin/tar -xvzf /opt/kubernetes-server-linux-amd64.tar.gz -C /opt kubernetes/server/bin/kubelet
        ExecStartPre=/usr/bin/chmod +x /opt/kubernetes/server/bin/kubelet
        ExecStart=/opt/kubernetes/server/bin/kubelet \
        --address=0.0.0.0 \
        --port=10250 \
        --kubeconfig=/srv/kubernetes/kubeconfig.yaml \
        --cluster-dns=10.250.0.53 \
        --cluster-domain=cluster.local \
        --cloud-provider=external \
        --volume-plugin-dir=/etc/kubernetes/volumeplugins \
        --logtostderr=true \
        --provider-id=cloudstack \
        --allow-privileged \
        -v=4
        Restart=always
        RestartSec=10
    - name: kube-proxy.service
      command: start
      content: |
        [Unit]
        Description=Kubernetes Proxy
        Documentation=https://github.com/GoogleCloudPlatform/kubernetes
        Requires=setup-network-environment.service
        After=kube-kubelet.service

        [Service]
        ExecStartPre=/sbin/modprobe ip_vs
        ExecStartPre=/sbin/modprobe ip_vs_rr
        ExecStartPre=/sbin/modprobe ip_vs_wrr
        ExecStartPre=/sbin/modprobe ip_vs_sh
        ExecStartPre=/sbin/modprobe nf_conntrack_ipv4
        ExecStartPre=/bin/tar -xvzf /opt/kubernetes-server-linux-amd64.tar.gz -C /opt kubernetes/server/bin/kube-proxy
        ExecStartPre=/usr/bin/chmod +x /opt/kubernetes/server/bin/kube-proxy
        ExecStart=/opt/kubernetes/server/bin/kube-proxy \
        --master=http://{{ k8s_master.default_ip}}:8080 \
        --config=/srv/kubernetes/kube-proxy.config \
        --logtostderr=true
        Restart=always
        RestartSec=10
  update:
    group: alpha
    reboot-strategy: off
